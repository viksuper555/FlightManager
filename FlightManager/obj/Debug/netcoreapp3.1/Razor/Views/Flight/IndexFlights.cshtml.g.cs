#pragma checksum "C:\Users\viksu\Source\Repos\viksuper555\FlightManagerRepo\FlightManager\Views\Flight\IndexFlights.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "6a9fc9f4faf5a3d2893671993e249c5ae708ce6a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Flight_IndexFlights), @"mvc.1.0.view", @"/Views/Flight/IndexFlights.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\viksu\Source\Repos\viksuper555\FlightManagerRepo\FlightManager\Views\_ViewImports.cshtml"
using FlightManager;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\viksu\Source\Repos\viksuper555\FlightManagerRepo\FlightManager\Views\_ViewImports.cshtml"
using FlightManager.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\viksu\Source\Repos\viksuper555\FlightManagerRepo\FlightManager\Views\Flight\IndexFlights.cshtml"
using FlightManager.ViewModels;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6a9fc9f4faf5a3d2893671993e249c5ae708ce6a", @"/Views/Flight/IndexFlights.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f786fd48d4832d47c30e803e7f87b4fe4964de31", @"/Views/_ViewImports.cshtml")]
    public class Views_Flight_IndexFlights : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<FlightManager.ViewModels.Flight.IndexFlightsViewModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"
<section class=""py-5"">
    <div class=""container"">
        <h1 style=""margin: 2%; text-align: center;"">All Flights</h1>
        <div style=""padding: 5%;"">
            <table class=""table"">
                <thead class=""thead-dark"">
                    <tr>
                        <th scope=""col"">Origin</th>
                        <th scope=""col"">Destination</th>
                        <th scope=""col"">Departure at</th>
                        <th scope=""col"">Flight duration</th>
                        <th scope=""col"">Passenger Seats</th>
                        <th scope=""col"">Business Class Seats</th>
                        <th scope=""col"">Coordinates</th>
                        <th scope=""col"">Details</th>
                    </tr>
                </thead>
                <tbody>
");
#nullable restore
#line 26 "C:\Users\viksu\Source\Repos\viksuper555\FlightManagerRepo\FlightManager\Views\Flight\IndexFlights.cshtml"
                     for (var i = 0; i < Model.Flights.Count; i++)
                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                        <tr>\r\n                            <th scope=\"row\">");
#nullable restore
#line 29 "C:\Users\viksu\Source\Repos\viksuper555\FlightManagerRepo\FlightManager\Views\Flight\IndexFlights.cshtml"
                                       Write(Model.Flights[i].Origin.Name);

#line default
#line hidden
#nullable disable
            WriteLiteral("</th>\r\n                            <td>");
#nullable restore
#line 30 "C:\Users\viksu\Source\Repos\viksuper555\FlightManagerRepo\FlightManager\Views\Flight\IndexFlights.cshtml"
                           Write(Model.Flights[i].Destination.Name);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                            <td>");
#nullable restore
#line 31 "C:\Users\viksu\Source\Repos\viksuper555\FlightManagerRepo\FlightManager\Views\Flight\IndexFlights.cshtml"
                           Write(Model.Flights[i].Departure.ToString(" dd.MM.yyyy г. в hh:mm ч."));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                            <td>");
#nullable restore
#line 32 "C:\Users\viksu\Source\Repos\viksuper555\FlightManagerRepo\FlightManager\Views\Flight\IndexFlights.cshtml"
                           Write(Model.Flights[i].FlightDuration.ToString("hh\\:mm"));

#line default
#line hidden
#nullable disable
            WriteLiteral("  ч.</td>\r\n                            <td>");
#nullable restore
#line 33 "C:\Users\viksu\Source\Repos\viksuper555\FlightManagerRepo\FlightManager\Views\Flight\IndexFlights.cshtml"
                           Write(Model.Flights[i].PassengerSeatsLeft);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                            <td>");
#nullable restore
#line 34 "C:\Users\viksu\Source\Repos\viksuper555\FlightManagerRepo\FlightManager\Views\Flight\IndexFlights.cshtml"
                           Write(Model.Flights[i].BusinessClassSeatsLeft);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                            <!--TODO: Add longtitude and latitude-->\r\n                            <td>Origin coordinates: ");
#nullable restore
#line 36 "C:\Users\viksu\Source\Repos\viksuper555\FlightManagerRepo\FlightManager\Views\Flight\IndexFlights.cshtml"
                                               Write(Model.Flights[i].Origin.Latitude);

#line default
#line hidden
#nullable disable
            WriteLiteral(" : ");
#nullable restore
#line 36 "C:\Users\viksu\Source\Repos\viksuper555\FlightManagerRepo\FlightManager\Views\Flight\IndexFlights.cshtml"
                                                                                   Write(Model.Flights[i].Origin.Longitude);

#line default
#line hidden
#nullable disable
            WriteLiteral(" </td>\r\n                            <td>Destination coordinates: ");
#nullable restore
#line 37 "C:\Users\viksu\Source\Repos\viksuper555\FlightManagerRepo\FlightManager\Views\Flight\IndexFlights.cshtml"
                                                    Write(Model.Flights[i].Destination.Latitude);

#line default
#line hidden
#nullable disable
            WriteLiteral(" : ");
#nullable restore
#line 37 "C:\Users\viksu\Source\Repos\viksuper555\FlightManagerRepo\FlightManager\Views\Flight\IndexFlights.cshtml"
                                                                                             Write(Model.Flights[i].Destination.Longitude);

#line default
#line hidden
#nullable disable
            WriteLiteral(" </td>\r\n\r\n                            <td>\r\n                                <div class=\"button-holder\">\r\n                                    <a");
            BeginWriteAttribute("href", " href=\"", 2131, "\"", 2182, 2);
            WriteAttributeValue("", 2138, "/Flight/IndexDetails?id=", 2138, 24, true);
#nullable restore
#line 41 "C:\Users\viksu\Source\Repos\viksuper555\FlightManagerRepo\FlightManager\Views\Flight\IndexFlights.cshtml"
WriteAttributeValue("", 2162, Model.Flights[i].Id, 2162, 20, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" class=\"btn btn-primary\">More info</a>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n");
#nullable restore
#line 45 "C:\Users\viksu\Source\Repos\viksuper555\FlightManagerRepo\FlightManager\Views\Flight\IndexFlights.cshtml"
                    }

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                </tbody>\r\n\r\n            </table>\r\n\r\n            <div class=\"d-flex flex-wrap align-items-center\">\r\n                <div class=\"pagination mx-auto\">\r\n");
#nullable restore
#line 53 "C:\Users\viksu\Source\Repos\viksuper555\FlightManagerRepo\FlightManager\Views\Flight\IndexFlights.cshtml"
                      
                        var prevPage = Model.CurrentPage - 1;
                        var nextPage = Model.CurrentPage + 1;
                    

#line default
#line hidden
#nullable disable
#nullable restore
#line 57 "C:\Users\viksu\Source\Repos\viksuper555\FlightManagerRepo\FlightManager\Views\Flight\IndexFlights.cshtml"
                     if (Model.CurrentPage > 1)
                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                        <a");
            BeginWriteAttribute("href", " href=\"", 2790, "\"", 2832, 2);
            WriteAttributeValue("", 2797, "/Flight/IndexFlights?page=", 2797, 26, true);
#nullable restore
#line 59 "C:\Users\viksu\Source\Repos\viksuper555\FlightManagerRepo\FlightManager\Views\Flight\IndexFlights.cshtml"
WriteAttributeValue("", 2823, prevPage, 2823, 9, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" class=\"btn btn-primary prev-arrow mx-1\"><i class=\"material-icons\">keyboard_arrow_left</i></a>\r\n");
#nullable restore
#line 60 "C:\Users\viksu\Source\Repos\viksuper555\FlightManagerRepo\FlightManager\Views\Flight\IndexFlights.cshtml"
                    }

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
#nullable restore
#line 62 "C:\Users\viksu\Source\Repos\viksuper555\FlightManagerRepo\FlightManager\Views\Flight\IndexFlights.cshtml"
                     for (var p = 1; p <= (Model.FlightsCount / 8) + 1; p++)
                    {
                        

#line default
#line hidden
#nullable disable
#nullable restore
#line 64 "C:\Users\viksu\Source\Repos\viksuper555\FlightManagerRepo\FlightManager\Views\Flight\IndexFlights.cshtml"
                         if (p == Model.CurrentPage)
                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                            <a class=\"btn btn-primary\"");
            BeginWriteAttribute("href", " href=\"", 3190, "\"", 3225, 2);
            WriteAttributeValue("", 3197, "/Flight/IndexFlights?page=", 3197, 26, true);
#nullable restore
#line 66 "C:\Users\viksu\Source\Repos\viksuper555\FlightManagerRepo\FlightManager\Views\Flight\IndexFlights.cshtml"
WriteAttributeValue("", 3223, p, 3223, 2, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">");
#nullable restore
#line 66 "C:\Users\viksu\Source\Repos\viksuper555\FlightManagerRepo\FlightManager\Views\Flight\IndexFlights.cshtml"
                                                                                      Write(p);

#line default
#line hidden
#nullable disable
            WriteLiteral("</a>\r\n");
#nullable restore
#line 67 "C:\Users\viksu\Source\Repos\viksuper555\FlightManagerRepo\FlightManager\Views\Flight\IndexFlights.cshtml"
                        }
                        else if (p >= Model.CurrentPage - 4 && (p <= Model.CurrentPage + 4 && p <= Model.EndPage))
                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                            <a");
            BeginWriteAttribute("href", " href=\"", 3435, "\"", 3470, 2);
            WriteAttributeValue("", 3442, "/Flight/IndexFlights?page=", 3442, 26, true);
#nullable restore
#line 70 "C:\Users\viksu\Source\Repos\viksuper555\FlightManagerRepo\FlightManager\Views\Flight\IndexFlights.cshtml"
WriteAttributeValue("", 3468, p, 3468, 2, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" class=\"btn mx-1\">");
#nullable restore
#line 70 "C:\Users\viksu\Source\Repos\viksuper555\FlightManagerRepo\FlightManager\Views\Flight\IndexFlights.cshtml"
                                                                               Write(p);

#line default
#line hidden
#nullable disable
            WriteLiteral("</a>\r\n");
#nullable restore
#line 71 "C:\Users\viksu\Source\Repos\viksuper555\FlightManagerRepo\FlightManager\Views\Flight\IndexFlights.cshtml"
                        }

#line default
#line hidden
#nullable disable
#nullable restore
#line 71 "C:\Users\viksu\Source\Repos\viksuper555\FlightManagerRepo\FlightManager\Views\Flight\IndexFlights.cshtml"
                         
                    }

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
#nullable restore
#line 74 "C:\Users\viksu\Source\Repos\viksuper555\FlightManagerRepo\FlightManager\Views\Flight\IndexFlights.cshtml"
                     if (Model.CurrentPage != Model.EndPage)
                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                        <a");
            BeginWriteAttribute("href", " href=\"", 3660, "\"", 3702, 2);
            WriteAttributeValue("", 3667, "/Flight/IndexFlights?page=", 3667, 26, true);
#nullable restore
#line 76 "C:\Users\viksu\Source\Repos\viksuper555\FlightManagerRepo\FlightManager\Views\Flight\IndexFlights.cshtml"
WriteAttributeValue("", 3693, nextPage, 3693, 9, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" class=\"btn btn-primary next-arrow mx-1\"><i class=\"material-icons\">keyboard_arrow_right</i></a>\r\n");
#nullable restore
#line 77 "C:\Users\viksu\Source\Repos\viksuper555\FlightManagerRepo\FlightManager\Views\Flight\IndexFlights.cshtml"
                    }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                </div>

            </div>

        </div>
    </div>

    <!-- HTML -->
    <div id=""chartdiv""></div>

    <!-- Styles -->
    <style>
        #chartdiv {
            width: 100%;
            height: 600px;
        }
    </style>

    <!-- Resources -->
    <script src=""https://cdn.amcharts.com/lib/4/core.js""></script>
    <script src=""https://cdn.amcharts.com/lib/4/maps.js""></script>
    <script src=""https://cdn.amcharts.com/lib/4/geodata/worldLow.js""></script>
    <script src=""https://cdn.amcharts.com/lib/4/themes/dataviz.js""></script>
    <script src=""https://cdn.amcharts.com/lib/4/themes/animated.js""></script>

    <!-- Chart code -->
    <script>
        am4core.ready(function () {

            // Themes begin
            am4core.useTheme(am4themes_animated);
            am4core.useTheme(am4themes_animated);
            // Themes end

            // Create map instance
            var chart = am4core.create(""chartdiv"", am4maps.MapChart);

          ");
            WriteLiteral(@"  var interfaceColors = new am4core.InterfaceColorSet();

            // Set map definition
            chart.geodata = am4geodata_worldLow;

            // Set projection
            chart.projection = new am4maps.projections.Mercator();

            // Export
            chart.exporting.menu = new am4core.ExportMenu();

            // Zoom control
            chart.zoomControl = new am4maps.ZoomControl();

            var originCities = ");
#nullable restore
#line 130 "C:\Users\viksu\Source\Repos\viksuper555\FlightManagerRepo\FlightManager\Views\Flight\IndexFlights.cshtml"
                          Write(JavaScriptConvert.SerializeObject(Model.Connections.Keys));

#line default
#line hidden
#nullable disable
            WriteLiteral(";\r\n            var destinationCities = ");
#nullable restore
#line 131 "C:\Users\viksu\Source\Repos\viksuper555\FlightManagerRepo\FlightManager\Views\Flight\IndexFlights.cshtml"
                               Write(JavaScriptConvert.SerializeObject(Model.Connections.Values));

#line default
#line hidden
#nullable disable
            WriteLiteral(@";
            // Data for general and map use

            //country: ""BG""
            //id: ""a204aa95-4274-422e-bf8c-8cd20a072eed""
            //latitude: 42.69751
            //longitude: 23.32415
            //name: ""Sofia""


            // Reassignment is bad, but will shorten the example
            for (i = 0; i < originCities.length; i++) {
                originCities[i].id += ""origin""
                originCities[i].scale = 1.5
                originCities[i].title = originCities[i].name
                originCities[i].destinations = destinationCities[i].map(ele => ele.id);
                originCities[i].zoomLevel = 3
                originCities[i].zoomLongitude = originCities[i].longitude
                originCities[i].zoomLatitude = originCities[i].latitude
            }
            console.log(originCities)

            //var originCities = [
            //    {
            //        ""id"": ""london"",
            //        ""title"": ""London"",
            //        ""destin");
            WriteLiteral(@"ations"": [""vilnius"", ""reykjavik"", ""lisbon"", ""moscow"", ""belgrade"", ""ljublana"", ""madrid"", ""stockholm"", ""bern"", ""kiev"", ""new york""],
            //        ""latitude"": 51.5002,
            //        ""longitude"": -0.1262,
            //        ""scale"": 1.5,
            //        ""zoomLevel"": 2.74,
            //        ""zoomLongitude"": -20.1341,
            //        ""zoomLatitude"": 49.1712
            //    },
            //    {
            //        ""id"": ""vilnius"",
            //        ""title"": ""Vilnius"",
            //        ""destinations"": [""london"", ""brussels"", ""prague"", ""athens"", ""dublin"", ""oslo"", ""moscow"", ""bratislava"", ""belgrade"", ""madrid""],
            //        ""latitude"": 54.6896,
            //        ""longitude"": 25.2799,
            //        ""scale"": 1.5,
            //        ""zoomLevel"": 4.92,
            //        ""zoomLongitude"": 15.4492,
            //        ""zoomLatitude"": 50.2631
            //    }
            //];
            destinationCities = destinationCities.fl");
            WriteLiteral(@"at()
            for (i = 0; i < originCities.length; i++) {
                destinationCities.id
                destinationCities[i].title = destinationCities[i].name
            }
            console.log(destinationCities)
            
            // Default to London view
            //chart.homeGeoPoint = { ""longitude"": originCities[0].zoomLongitude, ""latitude"": originCities[0].zoomLatitude };
            //chart.homeZoomLevel = originCities[0].zoomLevel;

            var targetSVG = ""M9,0C4.029,0,0,4.029,0,9s4.029,9,9,9s9-4.029,9-9S13.971,0,9,0z M9,15.93 c-3.83,0-6.93-3.1-6.93-6.93S5.17,2.07,9,2.07s6.93,3.1,6.93,6.93S12.83,15.93,9,15.93 M12.5,9c0,1.933-1.567,3.5-3.5,3.5S5.5,10.933,5.5,9S7.067,5.5,9,5.5 S12.5,7.067,12.5,9z"";
            var planeSVG = ""m2,106h28l24,30h72l-44,-133h35l80,132h98c21,0 21,34 0,34l-98,0 -80,134h-35l43,-133h-71l-24,30h-28l15,-47"";

            // Texts
            var labelsContainer = chart.createChild(am4core.Container);
            labelsContainer.isMeasured ");
            WriteLiteral(@"= false;
            labelsContainer.x = 80;
            labelsContainer.y = 27;
            labelsContainer.layout = ""horizontal"";
            labelsContainer.zIndex = 10;

            var plane = labelsContainer.createChild(am4core.Sprite);
            plane.scale = 0.15;
            plane.path = planeSVG;
            plane.fill = am4core.color(""#cc0000"");

            var title = labelsContainer.createChild(am4core.Label);
            title.text = ""Flights from London"";
            title.fill = am4core.color(""#cc0000"");
            title.fontSize = 20;
            title.valign = ""middle"";
            title.dy = 2;
            title.marginLeft = 15;

            var changeLink = chart.createChild(am4core.TextLink);
            changeLink.text = ""Click to change origin city"";
            changeLink.isMeasured = false;

            changeLink.events.on(""hit"", function () {
                if (currentOrigin == originImageSeries.dataItems.getIndex(0)) {
                    showLines(ori");
            WriteLiteral(@"ginImageSeries.dataItems.getIndex(1));
                }
                else {
                    showLines(originImageSeries.dataItems.getIndex(0));
                }
            })

            changeLink.x = 142;
            changeLink.y = 72;
            changeLink.fontSize = 13;


            // The world
            var worldPolygonSeries = chart.series.push(new am4maps.MapPolygonSeries());
            worldPolygonSeries.useGeodata = true;
            worldPolygonSeries.fillOpacity = 0.6;
            worldPolygonSeries.exclude = [""AQ""];

            // Origin series (big targets, London and Vilnius)
            var originImageSeries = chart.series.push(new am4maps.MapImageSeries());

            var originImageTemplate = originImageSeries.mapImages.template;

            originImageTemplate.propertyFields.latitude = ""latitude"";
            originImageTemplate.propertyFields.longitude = ""longitude"";
            originImageTemplate.propertyFields.id = ""id"";

            origin");
            WriteLiteral(@"ImageTemplate.cursorOverStyle = am4core.MouseCursorStyle.pointer;
            originImageTemplate.nonScaling = true;
            originImageTemplate.tooltipText = ""{title}"";

            originImageTemplate.setStateOnChildren = true;
            originImageTemplate.states.create(""hover"");

            originImageTemplate.horizontalCenter = ""middle"";
            originImageTemplate.verticalCenter = ""middle"";

            var originHitCircle = originImageTemplate.createChild(am4core.Circle);
            originHitCircle.radius = 11;
            originHitCircle.fill = interfaceColors.getFor(""background"");

            var originTargetIcon = originImageTemplate.createChild(am4core.Sprite);
            originTargetIcon.fill = interfaceColors.getFor(""alternativeBackground"");
            originTargetIcon.strokeWidth = 0;
            originTargetIcon.scale = 1.3;
            originTargetIcon.horizontalCenter = ""middle"";
            originTargetIcon.verticalCenter = ""middle"";
            originTarge");
            WriteLiteral(@"tIcon.path = targetSVG;

            var originHoverState = originTargetIcon.states.create(""hover"");
            originHoverState.properties.fill = chart.colors.getIndex(1);

            // when hit on city, change lines
            originImageTemplate.events.on(""hit"", function (event) {
                showLines(event.target.dataItem);
            })

            // destination series (small targets)
            var destinationImageSeries = chart.series.push(new am4maps.MapImageSeries());
            var destinationImageTemplate = destinationImageSeries.mapImages.template;

            destinationImageTemplate.nonScaling = true;
            destinationImageTemplate.tooltipText = ""{title}"";
            destinationImageTemplate.fill = interfaceColors.getFor(""alternativeBackground"");
            destinationImageTemplate.setStateOnChildren = true;
            destinationImageTemplate.states.create(""hover"");

            destinationImageTemplate.propertyFields.latitude = ""latitude"";
         ");
            WriteLiteral(@"   destinationImageTemplate.propertyFields.longitude = ""longitude"";
            destinationImageTemplate.propertyFields.id = ""id"";

            var destinationHitCircle = destinationImageTemplate.createChild(am4core.Circle);
            destinationHitCircle.radius = 7;
            destinationHitCircle.fillOpacity = 1;
            destinationHitCircle.fill = interfaceColors.getFor(""background"");

            var destinationTargetIcon = destinationImageTemplate.createChild(am4core.Sprite);
            destinationTargetIcon.scale = 0.7;
            destinationTargetIcon.path = targetSVG;
            destinationTargetIcon.horizontalCenter = ""middle"";
            destinationTargetIcon.verticalCenter = ""middle"";

            originImageSeries.data = originCities;
            destinationImageSeries.data = destinationCities;

            // Line series
            var lineSeries = chart.series.push(new am4maps.MapLineSeries());
            lineSeries.mapLines.template.line.strokeOpacity = 0.5;

 ");
            WriteLiteral(@"           chart.events.on(""ready"", function () {
                showLines(originImageSeries.dataItems.getIndex(0));
            })


            var currentOrigin;

            function showLines(origin) {

                var dataContext = origin.dataContext;
                var destinations = dataContext.destinations;
                // clear old
                lineSeries.mapLines.clear();
                lineSeries.toBack();
                worldPolygonSeries.toBack();

                currentOrigin = origin;

                if (destinations) {
                    for (var i = 0; i < destinations.length; i++) {
                        var line = lineSeries.mapLines.create();
                        line.imagesToConnect = [origin.mapImage.id, destinations[i]];
                    }
                }

                title.text = ""Flights from "" + dataContext.title;

                chart.zoomToGeoPoint({ latitude: dataContext.zoomLatitude, longitude: dataContext.zoomLongitude ");
            WriteLiteral(@"}, dataContext.zoomLevel, true);
            }

            var graticuleSeries = chart.series.push(new am4maps.GraticuleSeries());
            graticuleSeries.mapLines.template.line.strokeOpacity = 0.05;


        }); // end am4core.ready()
    </script>
</section>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<FlightManager.ViewModels.Flight.IndexFlightsViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
